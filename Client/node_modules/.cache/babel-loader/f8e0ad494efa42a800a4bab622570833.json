{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\LNT_Training\\\\MERN Stack\\\\ReactJS\\\\web_portalFinal\\\\src\\\\AlanApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect } from 'react';\nimport alanBtn from '@alan-ai/alan-sdk-web';\nconst alanKey = 'f1820f88357cf6c5263a8678f4d617bf2e956eca572e1d8b807a3e2338fdd0dc/stage';\n\nconst AlanApp = () => {\n  _s();\n\n  useEffect(() => {\n    alanBtn({\n      key: alanKey,\n      onCommand: ({\n        command,\n        articles\n      }) => {\n        if (command === 'newHeadlines') {\n          alert('This code was executed');\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AlanApp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AlanApp;\nexport default AlanApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlanApp\");","map":{"version":3,"sources":["F:/LNT_Training/MERN Stack/ReactJS/web_portalFinal/src/AlanApp.js"],"names":["React","Component","useEffect","alanBtn","alanKey","AlanApp","key","onCommand","command","articles","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,MAAMC,OAAO,GAAC,wEAAd;;AAEI,MAAMC,OAAO,GAAG,MAChB;AAAA;;AACIH,EAAAA,SAAS,CAAC,MACV;AACIC,IAAAA,OAAO,CAAC;AACJG,MAAAA,GAAG,EAAEF,OADD;AAEJG,MAAAA,SAAS,EAAE,CAAC;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,OAAD,KACX;AACI,YAAGD,OAAO,KAAG,cAAb,EACA;AACIE,UAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AACJ;AARG,KAAD,CAAP;AAUH,GAZQ,EAYN,EAZM,CAAT;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApBD;;GAAML,O;;KAAAA,O;AAyBV,eAAeA,OAAf","sourcesContent":["import React, { Component, useEffect } from 'react';\r\nimport alanBtn from '@alan-ai/alan-sdk-web';\r\nconst alanKey='f1820f88357cf6c5263a8678f4d617bf2e956eca572e1d8b807a3e2338fdd0dc/stage';\r\n\r\n    const AlanApp = () =>\r\n    {\r\n        useEffect(()=>\r\n        {\r\n            alanBtn({\r\n                key: alanKey,\r\n                onCommand: ({command, articles}) =>\r\n                {\r\n                    if(command==='newHeadlines')\r\n                    {\r\n                        alert('This code was executed');\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n      \r\n    \r\n\r\n\r\nexport default AlanApp\r\n"]},"metadata":{},"sourceType":"module"}