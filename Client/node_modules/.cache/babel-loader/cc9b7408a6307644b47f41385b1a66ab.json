{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\LNT_Training\\\\MERN Stack\\\\ReactJS\\\\web_portalFinal\\\\src\\\\components\\\\NewsCards\\\\NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NewsCard from '../NewsCard/NewsCard.js';\nimport { Grid, Grow, Typography } from '@material-ui/core';\nimport useStyles from '../NewsCard/NewsCard';\nconst infoCards = [{\n  color: '#00838f',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN'\n}];\n\nconst NewsCards = ({\n  articles\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h5\",\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 23\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: infoCard.title.split(' ')[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 80\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 129\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 40\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [\"Try saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 75\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 82\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          article: article,\n          i: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["F:/LNT_Training/MERN Stack/ReactJS/web_portalFinal/src/components/NewsCards/NewsCards.js"],"names":["React","NewsCard","Grid","Grow","Typography","useStyles","infoCards","color","title","text","info","NewsCards","articles","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewsCard from '../NewsCard/NewsCard.js'\r\nimport {Grid, Grow, Typography} from '@material-ui/core';\r\n\r\nimport useStyles from '../NewsCard/NewsCard';\r\n\r\nconst infoCards = [\r\n    { color: '#00838f', title: 'Latest News', text: 'Give me the latest news' },\r\n    { color: '#1565c0', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\r\n    { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\r\n    { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\r\n  ];\r\nconst NewsCards = ({articles}) =>\r\n{\r\n  const classes = useStyles();\r\n  if(!articles.length)\r\n  {\r\n      return (\r\n        <Grow in>\r\n        <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n        {infoCards.map((infoCard) => (\r\n                  <Grid item xs={12} sm={6} md={4} lg={3} className={classes.infoCard}>\r\n                    <div className={classes.card} style={{ backgroundColor: infoCard.color }}>\r\n                      <Typography variant=\"h5\" component=\"h5\">{infoCard.title}</Typography>\r\n                      {infoCard.info ? <Typography variant=\"h6\" component=\"h6\"><strong>{infoCard.title.split(' ')[2]}</strong>: <br />{infoCard.info}</Typography> : null}\r\n                      <Typography variant=\"h6\" component=\"h6\">Try saying: <br /> <i>{infoCard.text}</i></Typography>\r\n                    </div>\r\n                  </Grid>\r\n                ))}\r\n       </Grid>\r\n       </Grow>\r\n      )\r\n  }\r\n    return (\r\n        <Grow in>\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n           {articles.map((article, i) =>\r\n           (\r\n               <Grid item xs={12} sm={6} md={4} lg={3} style={{display :'flex'}}>\r\n\r\n                   <NewsCard article ={article} i={i}/>\r\n               </Grid>\r\n           ))}\r\n           </Grid>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default NewsCards"]},"metadata":{},"sourceType":"module"}