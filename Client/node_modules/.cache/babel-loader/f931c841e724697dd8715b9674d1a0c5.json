{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\LNT_Training\\\\MERN Stack\\\\ReactJS\\\\web_portalFinal\\\\Client\\\\src\\\\components\\\\NewsCards\\\\NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport NewsCard from \"../NewsCard/NewsCard\";\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nconst infoCards = [{\n  color: \"#00838f\",\n  title: \"Latest News\",\n  text: \"Give me the latest news\"\n}, {\n  color: \"#1565c0\",\n  title: \"News by Categories\",\n  info: \"Business, Entertainment, General, Health, Science, Sports, Technology\",\n  text: \"Give me the latest Technology news\"\n}, {\n  color: \"#4527a0\",\n  title: \"News by Terms\",\n  info: \"Bitcoin, PlayStation 5, Smartphones, Donald Trump...\",\n  text: \"What's up with PlayStation 5\"\n}, {\n  color: \"#283593\",\n  title: \"News by Sources\",\n  info: \"CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...\",\n  text: \"Give me the news from CNN\"\n}];\n\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: infoCard.title.split(\" \")[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), \":\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\" \", \"Try saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, infoCard.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          article: article,\n          activeArticle: activeArticle,\n          i: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["F:/LNT_Training/MERN Stack/ReactJS/web_portalFinal/Client/src/components/NewsCards/NewsCards.js"],"names":["React","NewsCard","Grid","Grow","Typography","useStyles","infoCards","color","title","text","info","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,aAA3B;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CADgB,EAEhB;AACEF,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,oBAFT;AAGEE,EAAAA,IAAI,EACF,uEAJJ;AAKED,EAAAA,IAAI,EAAE;AALR,CAFgB,EAShB;AACEF,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEE,EAAAA,IAAI,EAAE,sDAHR;AAIED,EAAAA,IAAI,EAAE;AAJR,CATgB,EAehB;AACEF,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEE,EAAAA,IAAI,EAAE,wDAHR;AAIED,EAAAA,IAAI,EAAE;AAJR,CAfgB,CAAlB;;AAuBA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAiC;AAAA;;AACjD,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,MAAI,CAACO,QAAQ,CAACG,MAAd,EAAsB;AACpB,wBACE,QAAC,IAAD;AAAM,MAAA,EAAE,MAAR;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAED,OAAO,CAACE,SADrB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,UAAU,EAAC,SAHb;AAIE,QAAA,OAAO,EAAE,CAJX;AAAA,kBAMGV,SAAS,CAACW,GAAV,CAAeC,QAAD,iBACb,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE,EAFN;AAGE,UAAA,EAAE,EAAE,CAHN;AAIE,UAAA,EAAE,EAAE,CAJN;AAKE,UAAA,EAAE,EAAE,CALN;AAME,UAAA,SAAS,EAAEJ,OAAO,CAACI,QANrB;AAAA,iCASE;AACE,YAAA,SAAS,EAAEJ,OAAO,CAACK,IADrB;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAEF,QAAQ,CAACX;AAA5B,aAFT;AAAA,oCAIE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA,wBAA0BW,QAAQ,CAACV;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKGU,QAAQ,CAACR,IAAT,gBACC,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA,sCACE;AAAA,0BAASQ,QAAQ,CAACV,KAAT,CAAea,KAAf,CAAqB,GAArB,EAA0B,CAA1B;AAAT;AAAA;AAAA;AAAA;AAAA,sBADF,oBAEE;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGGH,QAAQ,CAACR,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAMG,IAXN,eAYE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA,yBACG,GADH,+BAEc;AAAA;AAAA;AAAA;AAAA,sBAFd,oBAEqB;AAAA,0BAAIQ,QAAQ,CAACT;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF,WAOOS,QAAQ,CAACV,KAPhB;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEM,OAAO,CAACE,SADrB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,UAAU,EAAC,SAHb;AAIE,MAAA,OAAO,EAAE,CAJX;AAAA,gBAMGJ,QAAQ,CAACK,GAAT,CAAa,CAACK,OAAD,EAAUC,CAAV,kBACZ,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,EAAE,EAAE,CAArC;AAAwC,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAA/C;AAAA,+BACE,QAAC,QAAD;AAEE,UAAA,OAAO,EAAEF,OAFX;AAGE,UAAA,aAAa,EAAET,aAHjB;AAIE,UAAA,CAAC,EAAEU;AAJL,WACOA,CADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAlED;;GAAMZ,S;UACYN,S;;;KADZM,S;AAoEN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport NewsCard from \"../NewsCard/NewsCard\";\r\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst infoCards = [\r\n  { color: \"#00838f\", title: \"Latest News\", text: \"Give me the latest news\" },\r\n  {\r\n    color: \"#1565c0\",\r\n    title: \"News by Categories\",\r\n    info:\r\n      \"Business, Entertainment, General, Health, Science, Sports, Technology\",\r\n    text: \"Give me the latest Technology news\",\r\n  },\r\n  {\r\n    color: \"#4527a0\",\r\n    title: \"News by Terms\",\r\n    info: \"Bitcoin, PlayStation 5, Smartphones, Donald Trump...\",\r\n    text: \"What's up with PlayStation 5\",\r\n  },\r\n  {\r\n    color: \"#283593\",\r\n    title: \"News by Sources\",\r\n    info: \"CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...\",\r\n    text: \"Give me the news from CNN\",\r\n  },\r\n];\r\n\r\nconst NewsCards = ({ articles, activeArticle }) => {\r\n  const classes = useStyles();\r\n\r\n  if (!articles.length) {\r\n    return (\r\n      <Grow in>\r\n        <Grid\r\n          className={classes.container}\r\n          container\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          {infoCards.map((infoCard) => (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={4}\r\n              lg={3}\r\n              className={classes.infoCard}\r\n              key={infoCard.title}\r\n            >\r\n              <div\r\n                className={classes.card}\r\n                style={{ backgroundColor: infoCard.color }}\r\n              >\r\n                <Typography variant=\"h5\">{infoCard.title}</Typography>\r\n                {infoCard.info ? (\r\n                  <Typography variant=\"h6\">\r\n                    <strong>{infoCard.title.split(\" \")[2]}</strong>:\r\n                    <br />\r\n                    {infoCard.info}\r\n                  </Typography>\r\n                ) : null}\r\n                <Typography variant=\"h6\">\r\n                  {\" \"}\r\n                  Try saying: <br /> <i>{infoCard.text}</i>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grow>\r\n    );\r\n  }\r\n  return (\r\n    <Grow in>\r\n      <Grid\r\n        className={classes.container}\r\n        container\r\n        alignItems=\"stretch\"\r\n        spacing={3}\r\n      >\r\n        {articles.map((article, i) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: \"flex\" }}>\r\n            <NewsCard\r\n              key={i}\r\n              article={article}\r\n              activeArticle={activeArticle}\r\n              i={i}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default NewsCards;"]},"metadata":{},"sourceType":"module"}